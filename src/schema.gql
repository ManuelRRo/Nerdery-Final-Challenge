# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Variants {
  id: String!
  size: Size!
  textColor: TextColors!
  rgb: String!
  stock: Int!
}

"""Sizes shirts"""
enum Size {
  NONE
  SMALL
  MEDIUM
  LARGE
  X_LARGE
  XX_LARGE
  S4YEARS_XS
}

"""Colors Shirts"""
enum TextColors {
  NONE
  GREEN
  BLUE
  YELLOW
  PINK
  SKY_BLUE
  BROWN
  BLACK
  WHITE
  ORANGE
  PURPLE
}

type Products {
  id: String!
  name: String!
  price: Float!
  Variants: [Variants!]!
}

type Brand {
  id: String!
  name: String!
  products(offset: Int!, limit: Int!): [Products!]!
}

type Meta {
  itemsPerPage: Int!
  totalItems: Int!
  currentPage: Int!
  totalPages: Int!
}

type PaginatedProductData {
  data: [Products!]!
  meta: Meta!
}

type Orders {
  id: String!
  user_id: String!
  created_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Likes {
  productId: String!
}

type CartDetailResponse {
  quantity: Int!
  price: Float!
}

type Query {
  brands(offset: Int!, limit: Int!): [Brand!]!
  brand(id: String!): Brand!
  product(id: String!): Products!
  products(offset: Int!, limit: Int!, brand_id: String, parentCategory: String, categoryId: String, size: Size, textColor: TextColors): PaginatedProductData!
  Orders(offset: Int!, limit: Int!): [Orders!]!
  Order: [Orders!]!
}

type Mutation {
  newBrand(input: CreateBrandInput!): Brand!
  newProduct(input: ProductInput!): Products!
  updateProduct(input: UpdateProductInput!): Products!
  disableOrEnableProduct(input: ProductActiveInput!): Products!
  deleteProduct(id: String!): String
  likeProduct(input: LikeInput!): Likes!
  addCartDetailToCart(input: CartDetailInput!): CartDetailResponse!
}

input CreateBrandInput {
  name: String!
}

input ProductInput {
  brand_id: String!
  name: String!
  price: Float!
  categoryId: String!
}

input UpdateProductInput {
  id: String!
  patch: PatchProductInput!
}

input PatchProductInput {
  brand_id: String
  name: String
  price: Float
  categoryId: String
}

input ProductActiveInput {
  id: String!
  active: Boolean!
}

input LikeInput {
  productId: String!
}

input CartDetailInput {
  variant_id: String!
  quantity: Int!
}